// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dive.proto

package protobuf // import "github.com/project-hermes/hermes-app/server/types/protobuf"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "./"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Dive struct {
	SensorId             string       `protobuf:"bytes,1,opt,name=sensorId,proto3" json:"sensorId,omitempty"`
	SensorType           string       `protobuf:"bytes,2,opt,name=sensorType,proto3" json:"sensorType,omitempty"`
	FirmwareVersion      string       `protobuf:"bytes,3,opt,name=firmwareVersion,proto3" json:"firmwareVersion,omitempty"`
	SchemaVersion        string       `protobuf:"bytes,4,opt,name=schemaVersion,proto3" json:"schemaVersion,omitempty"`
	StartTime            int64        `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64        `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
	StartLat             float32      `protobuf:"fixed32,7,opt,name=startLat,proto3" json:"startLat,omitempty"`
	StartLong            float32      `protobuf:"fixed32,8,opt,name=startLong,proto3" json:"startLong,omitempty"`
	EndLat               float32      `protobuf:"fixed32,9,opt,name=endLat,proto3" json:"endLat,omitempty"`
	EndLong              float32      `protobuf:"fixed32,10,opt,name=endLong,proto3" json:"endLong,omitempty"`
	DiveData             []*DataPoint `protobuf:"bytes,11,rep,name=diveData,proto3" json:"diveData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Dive) Reset()         { *m = Dive{} }
func (m *Dive) String() string { return proto.CompactTextString(m) }
func (*Dive) ProtoMessage()    {}
func (*Dive) Descriptor() ([]byte, []int) {
	return fileDescriptor_dive_32df57830a5d23e1, []int{0}
}
func (m *Dive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dive.Unmarshal(m, b)
}
func (m *Dive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dive.Marshal(b, m, deterministic)
}
func (dst *Dive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dive.Merge(dst, src)
}
func (m *Dive) XXX_Size() int {
	return xxx_messageInfo_Dive.Size(m)
}
func (m *Dive) XXX_DiscardUnknown() {
	xxx_messageInfo_Dive.DiscardUnknown(m)
}

var xxx_messageInfo_Dive proto.InternalMessageInfo

func (m *Dive) GetSensorId() string {
	if m != nil {
		return m.SensorId
	}
	return ""
}

func (m *Dive) GetSensorType() string {
	if m != nil {
		return m.SensorType
	}
	return ""
}

func (m *Dive) GetFirmwareVersion() string {
	if m != nil {
		return m.FirmwareVersion
	}
	return ""
}

func (m *Dive) GetSchemaVersion() string {
	if m != nil {
		return m.SchemaVersion
	}
	return ""
}

func (m *Dive) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Dive) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *Dive) GetStartLat() float32 {
	if m != nil {
		return m.StartLat
	}
	return 0
}

func (m *Dive) GetStartLong() float32 {
	if m != nil {
		return m.StartLong
	}
	return 0
}

func (m *Dive) GetEndLat() float32 {
	if m != nil {
		return m.EndLat
	}
	return 0
}

func (m *Dive) GetEndLong() float32 {
	if m != nil {
		return m.EndLong
	}
	return 0
}

func (m *Dive) GetDiveData() []*DataPoint {
	if m != nil {
		return m.DiveData
	}
	return nil
}

type DataPoint struct {
	Temp                 float32  `protobuf:"fixed32,1,opt,name=temp,proto3" json:"temp,omitempty"`
	Depth                float32  `protobuf:"fixed32,2,opt,name=depth,proto3" json:"depth,omitempty"`
	Conductivity         float32  `protobuf:"fixed32,3,opt,name=conductivity,proto3" json:"conductivity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPoint) Reset()         { *m = DataPoint{} }
func (m *DataPoint) String() string { return proto.CompactTextString(m) }
func (*DataPoint) ProtoMessage()    {}
func (*DataPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_dive_32df57830a5d23e1, []int{1}
}
func (m *DataPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPoint.Unmarshal(m, b)
}
func (m *DataPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPoint.Marshal(b, m, deterministic)
}
func (dst *DataPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPoint.Merge(dst, src)
}
func (m *DataPoint) XXX_Size() int {
	return xxx_messageInfo_DataPoint.Size(m)
}
func (m *DataPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPoint.DiscardUnknown(m)
}

var xxx_messageInfo_DataPoint proto.InternalMessageInfo

func (m *DataPoint) GetTemp() float32 {
	if m != nil {
		return m.Temp
	}
	return 0
}

func (m *DataPoint) GetDepth() float32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *DataPoint) GetConductivity() float32 {
	if m != nil {
		return m.Conductivity
	}
	return 0
}

func init() {
	proto.RegisterType((*Dive)(nil), "Dive")
	proto.RegisterType((*DataPoint)(nil), "DataPoint")
}

func init() { proto.RegisterFile("dive.proto", fileDescriptor_dive_32df57830a5d23e1) }

var fileDescriptor_dive_32df57830a5d23e1 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xc1, 0xaa, 0xd3, 0x40,
	0x14, 0x86, 0x49, 0xd2, 0xdb, 0xdb, 0x9c, 0x5b, 0x51, 0x06, 0x91, 0xe1, 0x22, 0x12, 0x8a, 0x8b,
	0x6c, 0xda, 0x80, 0xba, 0x10, 0x11, 0x0a, 0xa5, 0x1b, 0xa1, 0x0b, 0x09, 0x45, 0xd0, 0xdd, 0x24,
	0x39, 0x6d, 0x46, 0xc8, 0xcc, 0x30, 0x33, 0x8d, 0x74, 0xe7, 0x33, 0xf4, 0x09, 0x7c, 0x40, 0x1f,
	0x42, 0x72, 0xd2, 0xa6, 0xf6, 0xae, 0x72, 0xbe, 0xff, 0xff, 0x4f, 0x86, 0xf9, 0x19, 0x80, 0x4a,
	0xb6, 0xb8, 0x30, 0x56, 0x7b, 0xfd, 0x38, 0x55, 0x42, 0x69, 0x53, 0xf4, 0x34, 0xfb, 0x1b, 0xc2,
	0x68, 0x2d, 0x5b, 0x64, 0x8f, 0x30, 0x71, 0xa8, 0x9c, 0xb6, 0x5f, 0x2a, 0x1e, 0x24, 0x41, 0x1a,
	0xe7, 0x03, 0xb3, 0x37, 0x00, 0xfd, 0xbc, 0x3d, 0x1a, 0xe4, 0x21, 0xb9, 0xff, 0x29, 0x2c, 0x85,
	0xe7, 0x3b, 0x69, 0x9b, 0x5f, 0xc2, 0xe2, 0x37, 0xb4, 0x4e, 0x6a, 0xc5, 0x23, 0x0a, 0x3d, 0x95,
	0xd9, 0x5b, 0x78, 0xe6, 0xca, 0x1a, 0x1b, 0x71, 0xc9, 0x8d, 0x28, 0x77, 0x2b, 0xb2, 0xd7, 0x10,
	0x3b, 0x2f, 0xac, 0xdf, 0xca, 0x06, 0xf9, 0x5d, 0x12, 0xa4, 0x51, 0x7e, 0x15, 0x18, 0x87, 0x7b,
	0x54, 0x15, 0x79, 0x63, 0xf2, 0x2e, 0x48, 0x77, 0xe8, 0x62, 0x1b, 0xe1, 0xf9, 0x7d, 0x12, 0xa4,
	0x61, 0x3e, 0xf0, 0xf0, 0xcf, 0x8d, 0x56, 0x7b, 0x3e, 0x21, 0xf3, 0x2a, 0xb0, 0x57, 0x30, 0x46,
	0x55, 0x75, 0x7b, 0x31, 0x59, 0x67, 0x3a, 0x9f, 0x45, 0x3b, 0x40, 0xc6, 0x05, 0xd9, 0x07, 0x98,
	0x74, 0xa5, 0xae, 0x85, 0x17, 0xfc, 0x21, 0x89, 0xd2, 0x87, 0x77, 0xb0, 0xe8, 0xe0, 0xab, 0x96,
	0xca, 0xaf, 0xa6, 0xa7, 0x65, 0xf4, 0xe2, 0xcf, 0xc7, 0xd3, 0x32, 0xfa, 0x1d, 0x04, 0xf9, 0x90,
	0x9c, 0x7d, 0x87, 0x78, 0x08, 0x31, 0x06, 0x23, 0x8f, 0x8d, 0xa1, 0xba, 0xc3, 0x9c, 0x66, 0xf6,
	0x12, 0xee, 0x2a, 0x34, 0xbe, 0xa6, 0x96, 0xc3, 0xbc, 0x07, 0x36, 0x83, 0x69, 0xa9, 0x55, 0x75,
	0x28, 0xbd, 0x6c, 0xa5, 0x3f, 0x52, 0xbb, 0x61, 0x7e, 0xa3, 0xad, 0x3e, 0xff, 0xf8, 0xb4, 0x97,
	0xbe, 0x3e, 0x14, 0x8b, 0x52, 0x37, 0x99, 0xb1, 0xfa, 0x27, 0x96, 0x7e, 0x5e, 0xa3, 0x6d, 0xd0,
	0x65, 0xfd, 0x67, 0x2e, 0x8c, 0xc9, 0x1c, 0xda, 0x16, 0x6d, 0xe6, 0x8f, 0x06, 0x5d, 0x46, 0x8f,
	0xa0, 0x38, 0xec, 0x8a, 0x31, 0x4d, 0xef, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xf9, 0x91,
	0xe9, 0x2a, 0x02, 0x00, 0x00,
}
